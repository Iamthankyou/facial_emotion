{"ast":null,"code":"import _regeneratorRuntime from\"/home/beter/OutSource/Folder/webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/beter/OutSource/Folder/webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as faceapi from\"face-api.js\";import Jimp from\"jimp\";import*as tf from\"@tensorflow/tfjs\";export var loadModels=function loadModels(){var MODEL_URL=\"\".concat(process.env.PUBLIC_URL,\"/models\");return Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL)]).then(function(){console.log(\"loaded\");});};export var detectFaces=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(image){var imgSize,displaySize,faces;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(image){_context.next=2;break;}return _context.abrupt(\"return\");case 2:imgSize=image.getBoundingClientRect();displaySize={width:imgSize.width,height:imgSize.height};if(!(displaySize.height===0)){_context.next=6;break;}return _context.abrupt(\"return\");case 6:_context.next=8;return faceapi.detectAllFaces(image,new faceapi.TinyFaceDetectorOptions({inputSize:320}));case 8:faces=_context.sent;return _context.abrupt(\"return\",faceapi.resizeResults(faces,displaySize));case 10:case\"end\":return _context.stop();}}},_callee);}));return function detectFaces(_x){return _ref.apply(this,arguments);};}();var result;export var drawResults=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(image,canvas,results,type,tocrop,facecanvas,model){var imgSize,displaySize,resizedDetections,box,drawOptions,drawBox;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(image&&canvas&&results)){_context2.next=9;break;}imgSize=image.getBoundingClientRect();displaySize={width:imgSize.width,height:imgSize.height};faceapi.matchDimensions(canvas,displaySize);canvas.getContext(\"2d\").clearRect(0,0,canvas.width,canvas.height);if(!(displaySize.width!==0)){_context2.next=9;break;}resizedDetections=faceapi.resizeResults(results,displaySize);if(resizedDetections[0]){box=resizedDetections[0].box;drawOptions={lineWidth:2};drawBox=new faceapi.draw.DrawBox(box,drawOptions);drawBox.draw(canvas);Jimp.read(tocrop).then(function(image){image.crop(resizedDetections[0].box.x,resizedDetections[0].box.y,resizedDetections[0].box.width,resizedDetections[0].box.height);image.resize(48,48);image=image.bitmap.data;image=tf.tensor3d(image,[48,48,4]);image=image.mean(2);image=image.expandDims(2);image=image.div(255);image=image.reshape([1,48,48,1]);var output=model.predict(image);output=output.dataSync();result=output;});}return _context2.abrupt(\"return\",result);case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function drawResults(_x2,_x3,_x4,_x5,_x6,_x7,_x8){return _ref2.apply(this,arguments);};}();","map":{"version":3,"sources":["/home/beter/OutSource/Folder/webapp/src/Face API/faceApi.js"],"names":["faceapi","Jimp","tf","loadModels","MODEL_URL","process","env","PUBLIC_URL","Promise","all","nets","tinyFaceDetector","loadFromUri","then","console","log","detectFaces","image","imgSize","getBoundingClientRect","displaySize","width","height","detectAllFaces","TinyFaceDetectorOptions","inputSize","faces","resizeResults","result","drawResults","canvas","results","type","tocrop","facecanvas","model","matchDimensions","getContext","clearRect","resizedDetections","box","drawOptions","lineWidth","drawBox","draw","DrawBox","read","crop","x","y","resize","bitmap","data","tensor3d","mean","expandDims","div","reshape","output","predict","dataSync"],"mappings":"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","sourcesContent":["import * as faceapi from \"face-api.js\";\nimport Jimp from \"jimp\";\nimport * as tf from \"@tensorflow/tfjs\"\n\n\n\nexport const loadModels = () => {\n  const MODEL_URL = `${process.env.PUBLIC_URL}/models`;\n\n  return Promise.all([\n    faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\n  ]).then(()=>{\n    console.log(\"loaded\")\n  });\n};\n\nexport const detectFaces = async image => {\n  if (!image) {\n    return;\n  }\n\n  const imgSize = image.getBoundingClientRect();\n  const displaySize = {width: imgSize.width, height: imgSize.height};\n  if (displaySize.height === 0) {\n    return;\n  }\n\n  const faces = await faceapi\n    .detectAllFaces(\n      image,\n      new faceapi.TinyFaceDetectorOptions({inputSize: 320})\n    )\n\n  return faceapi.resizeResults(faces, displaySize);\n};\n\nvar result;\n\nexport const drawResults = async (image, canvas, results, type,tocrop,facecanvas,model) => {\n  if (image && canvas && results) {\n    const imgSize = image.getBoundingClientRect();\n    const displaySize = {width: imgSize.width, height: imgSize.height};\n    faceapi.matchDimensions(canvas, displaySize);\n    canvas.getContext(\"2d\").clearRect(0, 0, canvas.width, canvas.height);\n    var resizedDetections;\n    if(displaySize.width!==0){\n    resizedDetections = faceapi.resizeResults(results, displaySize);  \n    if(resizedDetections[0]){\n    const box =resizedDetections[0].box\n    const drawOptions = {\n      lineWidth: 2\n    }\n    const drawBox = new faceapi.draw.DrawBox(box, drawOptions)\n    drawBox.draw(canvas)\n  \n\nJimp.read(tocrop)\n .then(image => {\n   image.crop( resizedDetections[0].box.x, resizedDetections[0].box.y, resizedDetections[0].box.width,resizedDetections[0].box.height ); \n   image.resize(48,48)\nimage=image.bitmap.data\nimage = tf.tensor3d(image,[48,48,4])\nimage = image.mean(2)\nimage = image.expandDims(2)\nimage = image.div(255)\nimage = image.reshape([1,48,48,1])\nvar output = model.predict(image)\noutput = output.dataSync()\nresult = output\n})\n}\n  return result \n      }\n    \n  }\n  \n};\n"]},"metadata":{},"sourceType":"module"}